#!/usr/bin/perl -T

BEGIN {
    require "./debian/tests/utils/mock.pm";
    CryptrootTest::Mock::->import();
}

my $POWERCYCLE_COUNT = $ARGV[0];

unlock_disk("topsecret");

if ($POWERCYCLE_COUNT == 0) {
    login("root");

    # make sure the root FS and swap are help by dm-crypt devices
    shell(q{cryptsetup luksOpen --test-passphrase /dev/vda3 <<<topsecret}, rv => 0);
    my $out = shell(q{lsblk -in -oNAME,TYPE,MOUNTPOINT /dev/vda3});
    die unless $out =~ m#^`-vda3_crypt\s+crypt\s*$#m;
    die unless $out =~ m#^\s{2}[`|]-cryptvg-root\s+lvm\s+/\s*$#m;
    die unless $out =~ m#^\s{2}[`|]-cryptvg-swap\s+lvm\s+\[SWAP\]\s*$#m;

    # create a stamp in memory, hibernate (suspend on disk) and thaw
    shell(q{echo hello >/dev/shm/foo.stamp});
    hibernate();
}
else {
    expect($SERIAL => qr/(?:^|\s)?PM: (?:hibernation: )?hibernation exit\r\n/m);
    # no need to relogin, we get the shell as we left it
    shell(q{grep -Fx hello </dev/shm/foo.stamp}, rv => 0);
    QMP::quit();

    # XXX would be nice to test cryptsetup-suspend here, but it's not
    # trivial to do since it doesn't use the serial console but VT8 for
    # the prompt, which makes sense for a graphical environment but
    # that's not a channel we can easily mock
}
