# Separate encrypted root FS and /home partitions, and transient swap --
# the latter two are not unlocked at initramfs stage but later in the
# boot process.  This environment also uses sysvinit as PID1 so we can
# test our init scripts.

sfdisk --append /dev/vda <<-EOF
	unit: sectors

	start=$((64*1024*2)), size=$((128*1024*2)), type=${GUID_TYPE_Linux_FS}
	start=$(((64+128)*1024*2)), size=$((64*1024*2)), type=${GUID_TYPE_LUKS}
	start=$(((64+128+64)*1024*2)), size=$((64*1024*2))
	start=$(((64+128+64+64)*1024*2)), type=${GUID_TYPE_LUKS}
EOF

# initialize a new LUKS partition and open it
echo -n "topsecret" >/rootfs.key
cryptsetup luksFormat --batch-mode \
    --key-file=/rootfs.key \
    --type=luks2 \
    --pbkdf=argon2id \
    --pbkdf-force-iterations=4 \
    --pbkdf-memory=32 \
    -- /dev/vda5
cryptsetup luksOpen --key-file=/rootfs.key --allow-discards \
    -- /dev/vda5 "vda5_crypt"

cryptsetup open --type=plain --key-file=/dev/urandom --allow-discards \
    -- /dev/vda4 "vda4_crypt"

mkdir /target
mke2fs -Ft ext4 /dev/mapper/vda5_crypt
mount -t ext4 /dev/mapper/vda5_crypt /target

mkdir /target/boot
mke2fs -Ft ext2 -m0 /dev/vda2
mount -t ext2 /dev/vda2 /target/boot

mkswap /dev/mapper/vda4_crypt
swapon /dev/mapper/vda4_crypt

# vim: set filetype=sh :
